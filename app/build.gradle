apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'jacoco'

apply plugin: 'kotlin-kapt'

jacoco {
	toolVersion = "$jacoco_version"
}

tasks.withType(Test) {
	jacoco.includeNoLocationClasses = true
}

android {
	compileSdkVersion 28
	defaultConfig {
		applicationId "ru.vd.movie"
		minSdkVersion 15
		targetSdkVersion 28
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}
	buildTypes {
		release {
			minifyEnabled false
			testCoverageEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		debug {
			testCoverageEnabled true
		}
	}
	testOptions {
		unitTests {
			includeAndroidResources = true
		}
	}
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testMycmsMockDebugUnitTest',
													  'testMycmsProdDebugUnitTest',
													  'createMycmsMockDebugCoverageReport',
													  'createMycmsProdDebugCoverageReport',]) {

	reports {
		xml.enabled = true
		html.enabled = true
	}

	def fileFilter = [
			'**/R.class',
			'**/R$*.class',
			'**/BuildConfig.*',
			'**/Manifest*.*',
			'**/*$ViewInjector*.*',
			'**/*$ViewBinder*.*',
			'**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
			'**/*Module.*', // Modules for Dagger.
			'**/*Dagger*.*', // Dagger auto-generated code.
			'**/*MembersInjector*.*', // Dagger auto-generated code.
			'**/*_Provide*Factory*.*',
			'**/*_Factory.*', //Dagger auto-generated code
			'**/*$*$*.*', // Anonymous classes generated by kotlin
			//add libraries
			'android/**/*.*',
			'com/**/*.*',
			'uk/**/*.*',
			'io/**/*.*',
			//remove what we don't test
			'androidTest/**/*.*',
			'test/**/*.*',
			'**/injector/**/*.*',
			'**/model/**/*.*',
			'**/mock/**/*.*',
			'**/event/**/*.*',
			'**/**_ViewBinding**',
			'**/*EventType.*',
			'**/**Mocked'
	]
	def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
	def mainSrc = "${project.projectDir}/src/main/java"

	sourceDirectories = files([mainSrc])
	classDirectories = files([debugTree])
	executionData = fileTree(dir: "$buildDir", includes: [
			"jacoco/testDebugUnitTest.exec",
			"outputs/code-coverage/connected/*coverage.ec"
	])
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
	implementation 'com.android.support:appcompat-v7:28.0.0'
	implementation 'com.android.support.constraint:constraint-layout:1.1.3'
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'com.android.support.test:runner:1.0.2'
	androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

	implementation 'com.google.dagger:dagger:2.16'
	annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
	kapt 'com.google.dagger:dagger-compiler:2.16'
}
