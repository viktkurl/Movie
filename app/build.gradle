apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'pmd'

apply plugin: 'kotlin-kapt'

apply from: "${rootDir}/jacoco.gradle"
android {
	compileSdkVersion compileSdkLevel
	defaultConfig {
		applicationId "ru.vd.movie"
		minSdkVersion minSdkLevel
		targetSdkVersion minSdkLevel
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}
	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
		test.java.srcDirs += 'src/test/kotlin'
		androidTest.java.srcDirs += 'src/androidTest/kotlin'
	}
	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			testCoverageEnabled true
			debuggable true
			jniDebuggable false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}

		preRelease {
			minifyEnabled true
			testCoverageEnabled true
			shrinkResources false
			debuggable true
			jniDebuggable true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}

		debug {
			minifyEnabled false
			testCoverageEnabled true
			shrinkResources false
			jniDebuggable true
			debuggable true
		}
	}
	dexOptions {
		javaMaxHeapSize "5g"
	}
	kapt {
		correctErrorTypes = true
	}
	testOptions {
		unitTests {
			includeAndroidResources = true
		}
	}
	lintOptions {
		//lint rules of conduct
		warningsAsErrors true
		abortOnError true
		htmlReport true
		//locations for the rules and output
		lintConfig file("${rootDir}/config/lint/lint-config.xml")
		htmlOutput file("${buildDir}/reports/lint/lint.html")
	}
}

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
	implementation "androidx.appcompat:appcompat:1.0.0"
	implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'androidx.test:runner:1.1.0-beta02'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-beta02'

	//Start dagger region
	implementation dagger.base
	annotationProcessor dagger.compiler
	kapt dagger.compiler
	//End dagger region

    implementation material
    implementation moshi.kotlin
}